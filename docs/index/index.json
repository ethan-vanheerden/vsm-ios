{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/vsm\/quickstartguide","title":"QuickStart Guide","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vsm\/statecontainer\/init(state:)","title":"init(state: State)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vsm\/statecontainer\/state","title":"var state: State","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vsm\/statecontainer\/bind(_:to:)-1oe26","title":"func bind<Value>(KeyPath<State, Value>, to: (State) -> (Value) -> State) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/bind(_:to:)-30qr3","title":"func bind<Value>(KeyPath<State, Value>, to: (State, Value) -> AnyPublisher<State, Never>) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/bind(_:to:)-3b25x","title":"func bind<Value>(KeyPath<State, Value>, to: (State) -> (Value) async -> State) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/bind(_:to:)-6l2ff","title":"func bind<Value>(KeyPath<State, Value>, to: (State, Value) async -> State) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/bind(_:to:)-7axq0","title":"func bind<Value>(KeyPath<State, Value>, to: (State, Value) -> State) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/bind(_:to:)-9rw6k","title":"func bind<Value>(KeyPath<State, Value>, to: (State) -> (Value) -> AnyPublisher<State, Never>) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/debug()-swift.method","title":"func debug() -> Self","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:)-1uta3","title":"func observe(AnyPublisher<State, Never>)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:)-2ofs","title":"func observe(() async -> State)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:)-4pebt","title":"func observe<SomeAsyncSequence>(() async -> SomeAsyncSequence)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:)-8sdut","title":"func observe(() -> State)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:debounced:file:line:)-3q4if","title":"func observe(() -> AnyPublisher<State, Never>, debounced: DispatchQueue.SchedulerTimeType.Stride, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:debounced:file:line:)-5tvkj","title":"func observe(() -> State, debounced: DispatchQueue.SchedulerTimeType.Stride, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:debounced:file:line:)-7lqbv","title":"func observe<SomeAsyncSequence>(() async -> SomeAsyncSequence, debounced: DispatchQueue.SchedulerTimeType.Stride, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:debounced:file:line:)-819bd","title":"func observe(() async -> State, debounced: DispatchQueue.SchedulerTimeType.Stride, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:debounced:identifier:)-2md01","title":"func observe<SomeAsyncSequence>(() async -> SomeAsyncSequence, debounced: DispatchQueue.SchedulerTimeType.Stride, identifier: AnyHashable)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:debounced:identifier:)-623us","title":"func observe(() -> State, debounced: DispatchQueue.SchedulerTimeType.Stride, identifier: AnyHashable)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:debounced:identifier:)-6tnnd","title":"func observe(() -> AnyPublisher<State, Never>, debounced: DispatchQueue.SchedulerTimeType.Stride, identifier: AnyHashable)","type":"method"},{"path":"\/documentation\/vsm\/statecontainer\/observe(_:debounced:identifier:)-ibez","title":"func observe(() async -> State, debounced: DispatchQueue.SchedulerTimeType.Stride, identifier: AnyHashable)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vsm\/statecontainer\/debug()-swift.type.method","title":"static func debug()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vsm\/statecontainer\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/vsm\/statecontainer\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/vsm\/statecontainer","title":"StateContainer","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vsm\/mutatingcopyable\/copy(mutating:)","title":"func copy(mutating: (inout Self) -> Void) -> Self","type":"method"}],"path":"\/documentation\/vsm\/mutatingcopyable","title":"MutatingCopyable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/vsm\/viewstaterendering\/viewstate","title":"ViewState","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vsm\/viewstaterendering\/container","title":"var container: StateContainer<Self.ViewState>","type":"property"},{"path":"\/documentation\/vsm\/viewstaterendering\/state","title":"var state: Self.ViewState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vsm\/viewstaterendering\/bind(_:to:)-10snd","title":"func bind<Value>(KeyPath<Self.ViewState, Value>, to: (Self.ViewState) -> (Value) -> Self.ViewState) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/bind(_:to:)-38xmt","title":"func bind<Value>(KeyPath<Self.ViewState, Value>, to: (Self.ViewState, Value) async -> Self.ViewState) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/bind(_:to:)-5fkqg","title":"func bind<Value>(KeyPath<Self.ViewState, Value>, to: (Self.ViewState, Value) -> Self.ViewState) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/bind(_:to:)-86lm4","title":"func bind<Value>(KeyPath<Self.ViewState, Value>, to: (Self.ViewState) -> (Value) -> AnyPublisher<Self.ViewState, Never>) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/bind(_:to:)-948aj","title":"func bind<Value>(KeyPath<Self.ViewState, Value>, to: (Self.ViewState, Value) -> AnyPublisher<Self.ViewState, Never>) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/bind(_:to:)-p7pn","title":"func bind<Value>(KeyPath<Self.ViewState, Value>, to: (Self.ViewState) -> (Value) async -> Self.ViewState) -> Binding<Value>","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:)-268qr","title":"func observe(() async -> Self.ViewState)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:)-5sm2h","title":"func observe(() -> Self.ViewState)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:)-7vht3","title":"func observe(AnyPublisher<Self.ViewState, Never>)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:)-9vrpw","title":"func observe<StateSequence>(() async -> StateSequence)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:debounced:file:line:)-524","title":"func observe(() -> Self.ViewState, debounced: DispatchQueue.SchedulerTimeType.Stride, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:debounced:file:line:)-5st3","title":"func observe(() async -> Self.ViewState, debounced: DispatchQueue.SchedulerTimeType.Stride, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:debounced:file:line:)-6ji89","title":"func observe<SomeAsyncSequence>(() async -> SomeAsyncSequence, debounced: DispatchQueue.SchedulerTimeType.Stride, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:debounced:file:line:)-7ihyy","title":"func observe(() -> AnyPublisher<Self.ViewState, Never>, debounced: DispatchQueue.SchedulerTimeType.Stride, file: String, line: UInt)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:debounced:identifier:)-3cnru","title":"func observe(() -> AnyPublisher<Self.ViewState, Never>, debounced: DispatchQueue.SchedulerTimeType.Stride, identifier: AnyHashable)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:debounced:identifier:)-3tan4","title":"func observe(() async -> Self.ViewState, debounced: DispatchQueue.SchedulerTimeType.Stride, identifier: AnyHashable)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:debounced:identifier:)-4j4yk","title":"func observe<SomeAsyncSequence>(() async -> SomeAsyncSequence, debounced: DispatchQueue.SchedulerTimeType.Stride, identifier: AnyHashable)","type":"method"},{"path":"\/documentation\/vsm\/viewstaterendering\/observe(_:debounced:identifier:)-m4dx","title":"func observe(() -> Self.ViewState, debounced: DispatchQueue.SchedulerTimeType.Stride, identifier: AnyHashable)","type":"method"}],"path":"\/documentation\/vsm\/viewstaterendering","title":"ViewStateRendering","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vsm\/statesequence\/init(_:)","title":"init(() async -> State...)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vsm\/statesequence\/makeasynciterator()","title":"func makeAsyncIterator() -> StateSequence<State>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/next()","title":"func next() async throws -> State?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vsm\/statesequence\/element","title":"StateSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vsm\/statesequence\/characters","title":"var characters: AsyncCharacterSequence<Self>","type":"property"},{"path":"\/documentation\/vsm\/statesequence\/lines","title":"var lines: AsyncLineSequence<Self>","type":"property"},{"path":"\/documentation\/vsm\/statesequence\/unicodescalars","title":"var unicodeScalars: AsyncUnicodeScalarSequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vsm\/statesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/compactmap(_:)-3pzj6","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/compactmap(_:)-9nymc","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/flatmap(_:)-4zl1l","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/flatmap(_:)-5oz76","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/map(_:)-1cbtp","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/map(_:)-3u2aq","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/vsm\/statesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/vsm\/statesequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/vsm\/statesequence","title":"StateSequence","type":"struct"}],"path":"\/documentation\/vsm","title":"VSM","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}